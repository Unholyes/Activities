#include<stdio.h>
#include<stdlib.h>
typedef struct 
{
	char name[50];
	int value;

}matrix;

int displayMenu(int* choice)
{
	printf("\nMatrix calculator Menu\n");
	printf("[1] Define a matrix\n");
	printf("[2] Calculate Matrix\n");
	printf("[3] Delete Matrix\n");
	printf("[4] Exit Program\n");    
	
	printf("\nEnter your choice: ");
	scanf("%d", choice);
	return *choice;
}

int defineMatrix(matrix* matrices, int* size )
{
	int row, column;
	printf("\nEnter name for the matrix: ");
	scanf(" %c", &matrices[*size].name);
	printf("Enter number of rows: ");
	scanf("%d", &row);
	printf("Enter number of columns: ");
	scanf("%d", &column);
	
	printf("\nEnter elements of matrix %c: \n",*(matrices[*size].name));
	int i,j;
	for(i = 0; i <row; i++)
	{
		for ( j = 0; j<column; j++)
		{
			printf("Enter element %c[%d][%d]: ",*(matrices[*size].name),i,j);
			scanf("%d",&matrices[*size].value);
		}
	}
	printf("\nMatrix %c Defined successfully.\n",*(matrices[*size].name));
}

void calculateMatrix(matrix* matrices, int* size)
{
	printf("\nList of matrices:");
	int i;
	for(i =0; i<*size; i++)
	{
		printf("%d. %c",i+1,*(matrices[*size].name));
	}
}

void DeleteMatrix()
{
	
}

int main()
{
	matrix* matrices = (matrix*)malloc(sizeof(matrix));
	int choice, size = 0;
	do
	{
		switch(displayMenu(&choice))
		{
			case 1:
				{
					defineMatrix(matrices, &size);
					break;
				}
			case 2:
				{
					calculateMatrix(matrices, &size);
					break;
				}
			case 3:
				{
					break;
				}
			case 4:
				{
					printf("Program Exited");
					break;
				}
		}
	          
	}while(choice!=4);

	return 0;
}
